#!/usr/bin/python
"""
Merge two sorted linked lists and return it as a new list. The new list should
be made by splicing together the nodes of the first two lists.
"""

l1 = [1, 3, 5, 7, 100000]
l2 = [2, 4, 6, 8, 32]


# According to Stack Overflow, for l1 + l2 < 1000000 just resorting the lists
# is more efficient

class Solution(object):
    def mergeTwoLists(self, l1, l2):

        # This isn't efficient, but I hate the l1 and l2 names
        two = l2
        one = l1

        newSort = []

        while len(one) > 0 and len(two) > 0:
            if one[0] < two[0]:
                newSort.append(one.pop(0))
            else:
                newSort.append(two.pop(0))

        # This takes care of lists that aren't the same length. Anything left
        # over should already be in the correct order
        newSort = newSort + one + two
        return newSort


solution = Solution()
print(solution.mergeTwoLists(l1, l2))
